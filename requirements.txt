Hereâ€™s the requirements.txt file with all the necessary dependencies for your Event Management System. It includes libraries for authentication, payments, chat, notifications, and other features.


---

requirements.txt

# Django Core
Django==4.2             # Django framework
djangorestframework==3.14.0  # Django REST Framework for APIs
django-filter==23.2     # Filtering support for DRF

# Authentication
django-allauth==0.57.0  # Google Authentication
djangorestframework-simplejwt==5.2.2  # JWT authentication

# Websockets and Chat
channels==4.0.0         # Django Channels for WebSockets
channels-redis==4.0.0   # Redis integration for Django Channels

# Payment Integration
razorpay==1.3.0         # Razorpay payment gateway
stripe==5.15.0          # Stripe payment gateway

# Background Tasks
celery==5.3.4           # Celery for async tasks
redis==5.0.1            # Redis for Celery broker and WebSocket support

# Notifications
django-celery-email==3.0.0  # Asynchronous email notifications
twilio==8.4.0               # SMS notifications

# Chatbots
rasa==3.5.4              # Rasa for chatbot integration (optional, use if needed)

# Utilities
python-decouple==3.8    # Environment variable management
Pillow==10.0.0          # Image processing (e.g., profile pictures, QR codes)
qrcode==7.3.1           # QR code generation for tickets
django-cors-headers==4.0.0  # Enable CORS for frontend-backend communication
django-rest-framework-json-api==5.0.0  # JSON:API support for DRF

# Database
mysqlclient==2.1.1      # MySQL database support
django-environ==0.10.0  # For environment variables in settings

# Testing and Debugging
pytest-django==5.0.0    # Testing framework for Django
pytest==7.4.2           # Python testing framework
coverage==7.3.1         # Code coverage tool
django-debug-toolbar==4.2.1  # Debugging tool for development

# Deployment
gunicorn==21.3.0        # WSGI HTTP server for deployment
whitenoise==6.5.0       # Serve static files in production
psycopg2-binary==2.9.8  # PostgreSQL database (if switching from MySQL)


---

Explanation of Key Dependencies

Core Frameworks:

Django: For backend development.

djangorestframework: For building RESTful APIs.

django-filter: Enables filtering in APIs.


Authentication:

django-allauth: Handles Google OAuth.

djangorestframework-simplejwt: Provides JWT-based authentication.


Websockets and Chat:

channels: Adds WebSocket support for real-time chat.

channels-redis: Uses Redis as a channel layer backend.


Payment Gateways:

razorpay and stripe: For integrating UPI, card, and wallet payments.


Background Tasks:

celery: Task queue for asynchronous processing.

redis: Broker for Celery and WebSockets.


Notifications:

django-celery-email: Asynchronous email notifications.

twilio: SMS notifications.


Chatbot Integration:

rasa: Implements a chatbot for FAQs and user interactions.


Utilities:

python-decouple: Manages environment variables.

Pillow: For image handling (e.g., profile pictures, event banners).

qrcode: Generates QR codes for tickets.

django-cors-headers: Allows the frontend to communicate with the backend.


Database:

mysqlclient: MySQL support.

django-environ: Handles database configurations securely using environment variables.


Testing and Debugging:

pytest, pytest-django: For writing and running tests.

coverage: Measures test coverage.

django-debug-toolbar: Debugging during development.


Deployment:

gunicorn: Production WSGI server.

whitenoise: Serves static files in production.

psycopg2-binary: Alternative PostgreSQL support.




---

Steps to Install

1. Create a virtual environment:

python -m venv venv
source venv/bin/activate  # Linux/Mac
venv\Scripts\activate     # Windows


2. Install dependencies:

pip install -r requirements.txt


3. Set up Redis and Celery:

Install Redis:

sudo apt install redis

Start Redis:

redis-server



4. Environment Configuration:

Use .env to securely store environment variables (e.g., database credentials, API keys).





---

Let me know if you need further guidance on setting up any of these features!

